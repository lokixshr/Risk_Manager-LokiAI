# Risk Manager Agent - Kubernetes Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: risk-manager-agent
  labels:
    app: risk-manager-agent
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: risk-manager-agent
  template:
    metadata:
      labels:
        app: risk-manager-agent
        version: v1.0.0
    spec:
      serviceAccountName: risk-manager-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: risk-manager
        image: risk-manager-agent:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8001
          name: http
          protocol: TCP
        env:
        # Environment Configuration
        - name: ENV
          value: "production"
        - name: LOG_LEVEL
          value: "INFO"
        - name: ENABLE_REDIS
          value: "true"
        - name: RISK_MANAGER_PORT
          value: "8001"
        - name: RATE_LIMIT_PER_MINUTE
          value: "60"
        - name: BACKGROUND_TASK_INTERVAL
          value: "600"
        
        # Database Configuration
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: risk-manager-secrets
              key: mongodb-uri
        - name: MONGO_DB_NAME
          value: "loki_agents_prod"
        - name: REDIS_URL
          value: "redis://redis-service:6379/0"
        
        # API Keys from Secrets
        - name: COINGECKO_API_KEY
          valueFrom:
            secretKeyRef:
              name: risk-manager-secrets
              key: coingecko-api-key
        - name: ALCHEMY_API_KEY
          valueFrom:
            secretKeyRef:
              name: risk-manager-secrets
              key: alchemy-api-key
        - name: ALCHEMY_URL
          valueFrom:
            secretKeyRef:
              name: risk-manager-secrets
              key: alchemy-url
        - name: ETHERSCAN_API_KEY
          valueFrom:
            secretKeyRef:
              name: risk-manager-secrets
              key: etherscan-api-key
        - name: THEGRAPH_API_KEY
          valueFrom:
            secretKeyRef:
              name: risk-manager-secrets
              key: thegraph-api-key
        
        # Risk Parameters
        - name: LIQUIDATION_THRESHOLD
          value: "1.0"
        - name: SAFETY_THRESHOLD
          value: "1.2"
        - name: VAR_CONFIDENCE
          value: "0.95"
        - name: VOLATILITY_WINDOW_DAYS
          value: "7"
        - name: MODEL_RETRAIN_HOURS
          value: "24"
        - name: MIN_TRAINING_SAMPLES
          value: "100"
        
        # Service URLs
        - name: LOKI_URL
          value: "http://loki-service:8000"
        
        # Resource Limits
        resources:
          limits:
            memory: "2Gi"
            cpu: "1000m"
          requests:
            memory: "1Gi"
            cpu: "500m"
        
        # Health Checks
        livenessProbe:
          httpGet:
            path: /api/risk/health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /api/risk/health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        # Startup Probe (for slower startup)
        startupProbe:
          httpGet:
            path: /api/risk/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        
        # Volume Mounts
        volumeMounts:
        - name: models-storage
          mountPath: /app/models
        - name: logs-storage
          mountPath: /app/logs
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        
        # Security Context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      
      volumes:
      - name: models-storage
        persistentVolumeClaim:
          claimName: risk-manager-models-pvc
      - name: logs-storage
        persistentVolumeClaim:
          claimName: risk-manager-logs-pvc
      - name: config-volume
        configMap:
          name: risk-manager-config
      
      # Node Selection
      nodeSelector:
        kubernetes.io/arch: amd64
      
      # Tolerations and Affinity
      tolerations:
      - key: "risk-manager"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - risk-manager-agent
              topologyKey: kubernetes.io/hostname

---
# Service
apiVersion: v1
kind: Service
metadata:
  name: risk-manager-service
  labels:
    app: risk-manager-agent
spec:
  type: ClusterIP
  ports:
  - port: 8001
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app: risk-manager-agent

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: risk-manager-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: risk-manager-agent
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60

---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: risk-manager-pdb
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: risk-manager-agent